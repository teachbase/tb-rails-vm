- name: InfluxDB | Get DB List
  command: curl 'http://localhost:8086/db?u={{ influxdb.admin_name }}&p={{ influxdb.admin_pass }}'
  register: db_list

- name: InfluxDB | Copy DB options file
  template: src="db_options.json.j2" dest="/tmp/db_options.json"
  when: db_list.stdout.find(influx_setup.db_name) == -1

- name: InfluxDB | Create DB
  command: >
    curl -X POST "http://localhost:8086/cluster/database_configs/{{ influx_setup.db_name }}?u={{ influxdb.admin_name }}&p={{ influxdb.admin_pass }}" 
     --data-binary @/tmp/db_options.json
  register: create_db
  when: db_list.stdout.find(influx_setup.db_name) == -1

- name: InfluxDB | Get DB List Againg
  command: curl 'http://localhost:8086/db?u={{ influxdb.admin_name }}&p={{ influxdb.admin_pass }}'
  register: db_list2
  failed_when: db_list2.stdout.find(influx_setup.db_name) == -1 

- name: InfluxDB | Get Users List
  command: curl "http://localhost:8086/db/{{ influx_setup.db_name }}/users?u={{ influxdb.admin_name }}&p={{ influxdb.admin_pass }}"
  register: db_users

- name: InfluxDB | Create Read User
  command: > 
    curl -X POST "http://localhost:8086/db/{{ influx_setup.db_name}}/users?u={{ influxdb.admin_name }}&p={{ influxdb.admin_pass }}" -d \
    '{"name": "{{ influx_setup.user_name }}","password": "{{ influx_setup.user_pass }}", 
    "readFrom": "{{ influx_setup.user_read_from }}", "writeTo": "{{ influx_setup.user_write_to }}"}'
  register: create_user
  when: influx_setup.user and (db_list2.stdout.find(influx_setup.db_name) != -1) and (db_users.stdout.find(influx_setup.user_name) == -1)

- name: InfluxDB | Check Users List
  command: curl "http://localhost:8086/db/{{ influx_setup.db_name }}/users?u={{ influxdb.admin_name }}&p={{ influxdb.admin_pass }}"
  register: db_users2
  failed_when: influx_setup.user and (db_users2.stdout.find(influx_setup.user_name) == -1)